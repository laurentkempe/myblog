---
import TagList from '../components/TagList.astro';
import Layout from './Layout.astro';
import { Image } from 'astro:assets';
import { Blog, AUTHOR } from '../utils/constants';
  import {getExcerpt} from "../utils/blog";
const { frontmatter, post } = Astro.props;
const canonicalUrl = new URL(Astro.url.pathname, Astro.site).toString();

// Create BlogPosting JSON-LD data
const blogPostJsonLd = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  "headline": frontmatter.title,
  "datePublished": new Date(frontmatter.date).toISOString(),
  "image": frontmatter.coverImage || "",
  "description": getExcerpt(post.body || ""),
  "author": {
    "@type": "Person",
    "name": AUTHOR.NAME,
    "url": AUTHOR.URL,
    "jobTitle": AUTHOR.JOB_TITLE,
    "image": AUTHOR.IMAGE,
    "sameAs": [
      AUTHOR.SOCIAL_PROFILES.GITHUB,
      AUTHOR.SOCIAL_PROFILES.LINKEDIN,
      AUTHOR.SOCIAL_PROFILES.BLUESKY,
      AUTHOR.SOCIAL_PROFILES.FLICKR,
      AUTHOR.SOCIAL_PROFILES.X
    ]
  },
  "publisher": {
    "@type": "Person",
    "name": AUTHOR.NAME,
    "url": AUTHOR.URL,
    "jobTitle": AUTHOR.JOB_TITLE,
    "image": AUTHOR.IMAGE,
    "sameAs": [
      AUTHOR.SOCIAL_PROFILES.GITHUB,
      AUTHOR.SOCIAL_PROFILES.LINKEDIN,
      AUTHOR.SOCIAL_PROFILES.BLUESKY,
      AUTHOR.SOCIAL_PROFILES.X
    ]
  },
  "mainEntityOfPage": {
    "@type": "WebPage",
    "@id": canonicalUrl
  },
  "keywords": frontmatter.tags?.join(', ') || "",
  "url": canonicalUrl
};
---
<Layout title={frontmatter.title} jsonLd={blogPostJsonLd}>
  <p><em>{frontmatter.description}</em></p>
  {frontmatter.coverImage ? (
    <div class="relative pt-1">
      <Image src={`${frontmatter.coverImage}`}
            alt={`${frontmatter.coverCaption}`}
            width="1600"
            height="1067"
            class="w-full"
      />
      <div class="absolute text-white top-1/3 left-1/3 transform -translate-x-1/4 -translate-y-1/4">
        <p class="text-2xl sm:text-3xl md:text-5xl font-extrabold drop-shadow-[0_4px_3px_rgb(0,0,0,0.5)] dark:drop-shadow-[0_4px_3px_rgb(255,255,255,0.5)]">{frontmatter.title}</p>
        <p class="py-2 text-sm sm:text-base">{new Date(frontmatter.date).toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' })}</p>
      </div>
      {frontmatter.tags?.length > 0 && (
        <div class="absolute bottom-5 left-5">
          <TagList tags={frontmatter.tags} />
        </div>
      )}
      <p class="absolute text-sm sm:text-xs text-white bottom-5 right-5">{frontmatter.coverCaption !== undefined && frontmatter.coverCaption}</p>
    </div>
  ) : (
    <div class="py-8">
      <h1 class="text-2xl sm:text-3xl md:text-5xl font-extrabold text-gray-900 dark:text-white">{frontmatter.title}</h1>
      <p class="py-2 text-sm sm:text-base text-gray-600 dark:text-gray-400">{new Date(frontmatter.date).toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' })}</p>
      {frontmatter.tags?.length > 0 && (
        <div class="py-2">
          <TagList tags={frontmatter.tags} />
        </div>
      )}
    </div>
  )}
  <div class="py-4">
    <slot />
  </div>
</Layout>

<style>
    a {
      color: #00539F;
    }

    .tags {
      display: flex;
      flex-wrap: wrap;
    }

    .tag {
      margin: 0.25em;
      border: dotted 1px #a1a1a1;
      border-radius: .5em;
      padding: .5em 1em;
      font-size: 1.15em;
      background-color: #F8FCFD;
    }

    @media (prefers-color-scheme: dark) {
      a {
        color: #7FB3D5;
      }

      .tag {
        border-color: #5a5a5a;
        background-color: #2D2D2D;
      }
    }

    /* Add the following styles to ensure full width on mobile devices */
    body, html {
      margin: 0;
      padding: 0;
      width: 100%;
      overflow-x: hidden;
    }

    .relative {
      width: 100%;
    }

    .absolute {
      max-width: 100%;
    }
</style>
