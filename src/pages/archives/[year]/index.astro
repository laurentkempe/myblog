---
import Layout from '../../../layouts/Layout.astro';
import { getAllPosts } from '../../../utils/collections';
import BlogPostPreview from '../../../components/BlogPostPreview.astro';
import Pagination from '../../../components/Pagination.astro';
import type { CollectionEntry } from 'astro:content';

type Post = CollectionEntry<'posts'>;

export async function getStaticPaths() {
  const sortedPosts = await getAllPosts();

  const years = [...new Set(sortedPosts.map(post => 
    new Date(post.data.date).getFullYear()
  ))];

  return years.map(year => {
    const yearPosts = sortedPosts.filter(post => 
      new Date(post.data.date).getFullYear() === year
    );
    return {
      params: { year: String(year) },
      props: { posts: yearPosts.slice(0, 4), year, totalPosts: yearPosts.length }
    };
  });
}

const { posts, year, totalPosts } = Astro.props;
const page = {
  data: posts,
  start: 0,
  end: 4,
  total: totalPosts,
  currentPage: 1,
  size: 4,
  lastPage: Math.ceil(totalPosts / 4),
  url: {
    current: `/archives/${year}`,
    next: totalPosts > 4 ? `/archives/${year}/page/2` : undefined,
    prev: undefined,
    first: undefined, // Remove first page link on first page
    last: totalPosts > 4 ? `/archives/${year}/page/${Math.ceil(totalPosts / 4)}` : undefined
  }
};
---

<Layout title={`Archives for ${year}`}>
    <h1 class="text-2xl pl-4 pt-8 font-bold mb-8 text-gray-800 dark:text-gray-200">
      Archives for {year}
    </h1>

    {posts.map((post: Post) => <BlogPostPreview post={post} />)}

    <Pagination 
      page={page}
      urlPattern={(pageNum) => `/archives/${year}${pageNum === 1 ? '' : `/page/${pageNum}`}`}
    />
</Layout>