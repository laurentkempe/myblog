---
import Layout from '../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import { Icon } from 'astro-icon/components';

const allPosts = await getCollection("posts");

// Get all unique tags and their posts
const tagMap = allPosts.reduce((acc, post) => {
  if (!post.data.tags) return acc;
  
  post.data.tags.forEach(tag => {
    if (!acc[tag]) {
      acc[tag] = [];
    }
    acc[tag].push(post);
  });
  return acc;
}, {} as Record<string, typeof allPosts>);

// Sort tags alphabetically
const sortedTags = Object.keys(tagMap).sort();

// Calculate tag sizes based on post count
const maxPosts = Math.max(...Object.values(tagMap).map(posts => posts.length));
const minPosts = Math.min(...Object.values(tagMap).map(posts => posts.length));
const getFontSize = (postCount: number) => {
  const minSize = 0.8;
  const maxSize = 2;
  const scale = (postCount - minPosts) / (maxPosts - minPosts || 1);
  return minSize + (maxSize - minSize) * scale;
};
---

<Layout title="All Tags">
  <div class="max-w-4xl mx-auto px-4">
    <!-- Tag Cloud -->
    <div class="mb-12 p-6 bg-gray-50 dark:bg-gray-800 rounded-lg">
      <h2 class="text-2xl font-bold mb-4 text-gray-900 dark:text-gray-100">Tag Cloud</h2>
      <div class="flex flex-wrap gap-2">
        {sortedTags.map(tag => {
          const postCount = tagMap[tag].length;
          const fontSize = getFontSize(postCount);
          return (
            <a
              href={`#${tag.toLowerCase().replace(/\s+/g, '-')}`}
              class="hover:text-blue-500 dark:hover:text-blue-400 transition-colors duration-200"
              style={`font-size: ${fontSize}rem;`}
            >
              {tag}
              <span class="text-sm text-gray-500 dark:text-gray-400">({postCount})</span>
            </a>
          );
        })}
      </div>
    </div>

    <!-- Tags and Posts List -->
    <div class="space-y-8">
      {sortedTags.map(tag => (
        <div id={tag.toLowerCase().replace(/\s+/g, '-')} class="scroll-mt-16">
          <h2 class="text-2xl font-bold mb-4 flex items-center gap-2 text-gray-900 dark:text-gray-100">
            <Icon name="fa6-solid:tag" class="w-5 h-5" />
            {tag}
            <span class="text-lg text-gray-500 dark:text-gray-400">({tagMap[tag].length} posts)</span>
          </h2>
          <ul class="ml-6 space-y-2">
            {tagMap[tag]
              .sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime())
              .map(post => (
                <li>
                  <a 
                    href={post.data.permalink}
                    class="text-blue-600 dark:text-blue-400 hover:underline"
                  >
                    {post.data.title}
                    <span class="text-sm text-gray-500 dark:text-gray-400 ml-2">
                      ({new Date(post.data.date).toLocaleDateString('en-US', { 
                        year: 'numeric',
                        month: 'short',
                        day: 'numeric'
                      })})
                    </span>
                  </a>
                </li>
              ))}
          </ul>
        </div>
      ))}
    </div>
  </div>
</Layout>