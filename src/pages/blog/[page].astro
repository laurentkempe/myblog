---
import Layout from '../../layouts/Layout.astro';
import markdownit from 'markdown-it'
import { Image } from 'astro:assets';
import { getCollection } from 'astro:content';
import { Icon } from 'astro-icon/components';
import TagList from '../../components/TagList.astro';
import type { Page } from 'astro';
import type { CollectionEntry } from 'astro:content';

function getExcerpt(content: string): string {
  const md = markdownit();
  const moreIndex = content.indexOf('{/* <!-- more --> */}');
  if (moreIndex === -1) {
    return `<div class="mb-4 text-gray-900 dark:text-gray-100">${md.render(content)}</div>`;
  }
  const excerpt = content.slice(0, moreIndex);
  return `<div class="mb-4 text-gray-900 dark:text-gray-100">${md.render(excerpt)}</div>`;
}

export async function getStaticPaths({ paginate }: { paginate: any }) {  
  const posts = await getCollection('posts');
  const sortedPosts = posts
  .sort(
    (a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
  );
  return paginate(sortedPosts, { pageSize: 4 });
}

const { page } = Astro.props;
type Props = {
  page: Page<CollectionEntry<'posts'>>;
};
---
<Layout title="Blog">
		{
      page.data.map((post) => 
        <article class="bg-white dark:bg-gray-900 p-4 flex flex-col md:flex-row">
          <div class="flex-1">
            <h2 class="text-2xl font-bold dark:text-gray-100">
              <a href={`${post.data.permalink}`} class="text-blue-600 dark:text-blue-400 hover:underline block">{post.data.title}</a>
            </h2>
            <div class="flex items-center gap-2 text-sm text-gray-500 dark:text-gray-400 mt-1 mb-2">
              <span>
                {new Date(post.data.date).toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' })}
              </span>
              <TagList tags={post.data.tags} />
            </div>
            {post.body && <p set:html={getExcerpt(post.body)}></p>}
            <p class="mt-2"><a href={`${post.data.permalink}`} class="text-blue-500 dark:text-blue-400 hover:underline">Continue reading</a></p>
          </div>
          <div class="ml-6 hidden md:block">
            <a href={`${post.data.permalink}`}>
              <Image src={`${post.data.thumbnailImage}`}
                    alt={`${post.data.coverCaption}`}
                    class="rounded-lg shadow-md"
                    width="150"
                    height="150" />
            </a>
          </div>
        </article>
		  )
    }
  <div class="flex justify-between items-center p-6">
    <div class="space-x-2 flex items-center">
      {page.url.first ? <a href={page.url.first} class="text-blue-500 dark:text-blue-400 hover:underline"><Icon name="fa6-solid:angles-left" /></a> : null}
      {page.url.prev ? <a href={page.url.prev} class="text-blue-500 dark:text-blue-400 hover:underline"><Icon name="fa6-solid:angle-left" /></a> : null}
      {
        Array.from({ length: Math.ceil(page.total / 4) }, (_, i) => (
          <a href={`/blog/${i + 1}`} class={`px-2 py-1 ${page.currentPage === i + 1 ? 'bg-blue-500 text-white' : 'text-blue-500 dark:text-blue-400 hover:underline'}`}>{i + 1}</a>
        ))
      }
      {page.url.next ? <a href={page.url.next} class="text-blue-500 dark:text-blue-400 hover:underline"><Icon name="fa6-solid:angle-right" /></a> : null}
      {page.url.last ? <a href={page.url.last} class="text-blue-500 dark:text-blue-400 hover:underline"><Icon name="fa6-solid:angles-right" /></a> : null}
    </div>
    <div class="text-gray-600 dark:text-gray-400">
      Page {page.currentPage} of {Math.ceil(page.total / 4)}
    </div>
  </div>
</Layout>