---
import Layout from '../../../layouts/Layout.astro';
import { getAllPosts } from '../../../utils/collections';
import BlogPostPreview from '../../../components/BlogPostPreview.astro';
import Pagination from '../../../components/Pagination.astro';
import { Icon } from 'astro-icon/components';
import type { CollectionEntry } from 'astro:content';

type Post = CollectionEntry<'posts'>;

export async function getStaticPaths({ paginate }: { paginate: Function }) {
  const sortedPosts = await getAllPosts();

  // Get all unique tags
  const allTags = [...new Set(sortedPosts.flatMap(post => post.data.tags || []))].sort();

  return allTags.flatMap(tag => {
    const tagPosts = sortedPosts.filter(post => 
      post.data.tags?.includes(tag)
    );
    return paginate(tagPosts, {
      params: { 
        tag,
        // Ensure page parameter is correctly set for all pages
        page: "page"
      },
      pageSize: 4,
      props: { tag }
    });
  });
}

const { page, tag } = Astro.props;

// Format URLs consistently
const tagPath = `/tags/${tag}`;
const pageUrl = (pageNum: number) => pageNum === 1 ? tagPath : `${tagPath}/page/${pageNum}`;
---

<Layout title={`Posts tagged with "${tag}"${page.currentPage > 1 ? ` - Page ${page.currentPage}` : ''}`}>
    <h1 class="text-2xl pl-4 pt-8 font-bold mb-8 flex items-center gap-2 text-gray-800 dark:text-gray-200">
      <Icon name="fa6-solid:tag" class="w-6 h-6" />
      Posts tagged with "{tag}"
      {page.currentPage > 1 && <span class="text-lg">- Page {page.currentPage}</span>}
    </h1>

    {page.data.map((post: Post) => <BlogPostPreview post={post} />)}

    <Pagination 
      page={page}
      urlPattern={pageUrl}
    />
</Layout>